package GSach;

import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JComboBox;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

import com.mysql.cj.jdbc.result.ResultSetMetaData;

import javax.swing.JScrollPane;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class GUI_delSA extends JFrame {

	private JPanel contentPane;
	static XLSach _xlSach = new XLSach();
	private JTable tableSach;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		_xlSach.getConn();
		
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					GUI_delSA frame = new GUI_delSA();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}
	
	//Hàm xử lý data để load vào table
	void loadData(ResultSet rs) {
		try {
			//Lấy ra số dòng truy vấn được từ database
			ResultSetMetaData stData = (ResultSetMetaData) rs.getMetaData();
			int count = stData.getColumnCount(); //count = 4
			
			DefaultTableModel RecordTable = (DefaultTableModel)tableSach.getModel();
			RecordTable.setRowCount(0);
			
			while (rs.next()) {
				Vector listData = new Vector();
				Sach _sach = new Sach(rs.getInt("MaS"), 
						rs.getString("TenS"), 
						rs.getInt("NamXB"), 
						rs.getInt("GiaB"));
				
				for (int i=1; i<=count; i++) {
					listData.add(_sach.getMaS());
					listData.add(_sach.getTenS());
					listData.add(_sach.getNamXB());
					listData.add(_sach.getGiaB());
					listData.add(_sach.ThanhTien());
				}
				RecordTable.addRow(listData);
			}
		}
		catch (Exception ex) {
			JOptionPane.showMessageDialog(null, ex);
		}
	}
	
	void loadDataEvent() {
		ResultSet rs = null;
		try {
			rs = _xlSach.getSA();
		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		loadData(rs);
	}
	
	/**
	 * Create the frame.
	 */
	public GUI_delSA() {
		addComponentListener(new ComponentAdapter() {
			@Override
			public void componentShown(ComponentEvent e) {
				loadDataEvent();
			}
		});
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JComboBox cbNXB = new JComboBox();
		cbNXB.setModel(new DefaultComboBoxModel(new String[] {"2019", "2020", "2021"}));
		cbNXB.setBounds(10, 11, 291, 22);
		contentPane.add(cbNXB);
		
		JButton btnDel = new JButton("Xóa sách");
		btnDel.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				int dialogResult = JOptionPane.showConfirmDialog(null, 
						"Bạn có muốn xóa toàn bộ sách của năm " + cbNXB.getSelectedItem().toString() + " không?",
						"Thông báo!", JOptionPane.OK_CANCEL_OPTION);
				if (dialogResult == JOptionPane.YES_OPTION) {
					boolean delSA = false;
					try {
						delSA = _xlSach.deleteSA(cbNXB.getSelectedItem().toString());
					} catch (SQLException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
					if (delSA) {
						JOptionPane.showMessageDialog(null, "Xóa thành công!");
						loadDataEvent();
					}
					else {
						JOptionPane.showMessageDialog(null, "Xóa không thành công!");
						loadDataEvent();
					}
				}
			}
		});
		btnDel.setBounds(311, 11, 89, 23);
		contentPane.add(btnDel);
		
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 49, 414, 201);
		contentPane.add(scrollPane);
		
		tableSach = new JTable();
		scrollPane.setViewportView(tableSach);
		tableSach.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"M\u00E3 s\u00E1ch", "T\u00EAn s\u00E1ch", "N\u0103m xu\u1EA5t b\u1EA3n", "Gi\u00E1 b\u00E1n", "Th\u00E0nh ti\u1EC1n"
			}
		) {
			Class[] columnTypes = new Class[] {
				Integer.class, String.class, Integer.class, Integer.class, Double.class
			};
			public Class getColumnClass(int columnIndex) {
				return columnTypes[columnIndex];
			}
		});
		tableSach.getColumnModel().getColumn(2).setPreferredWidth(83);
	}
}
